<?php

/**
 * @file
 * Contains ymca_workflow specific functions.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\node\NodeInterface;

/**
 * Implements hook_entity_presave().
 */
function ymca_workflow_entity_presave(EntityInterface $entity) {
  // Proceed only with nodes.
  if (!($entity instanceof NodeInterface)) {
    return;
  }

  // When revision set to be published, set it to default.
  if ($entity->field_state->value == 'workflow_published') {
    $entity->status->value = 1;
    $entity->isDefaultRevision(TRUE);
  }

  // When revision set to be unpublished, set it to default and unpublished.
  if ($entity->field_state->value == 'workflow_unpublished') {
    $entity->status->value = 0;
    $entity->isDefaultRevision(TRUE);
  }
}

/**
 * Implements hook_entity_prepare_form().
 */
function ymca_workflow_entity_prepare_form(EntityInterface $entity, $operation, FormStateInterface $form_state) {
  // Proceed only with nodes and Edit operation.
  if (!($entity instanceof NodeInterface) || $operation != 'edit') {
    return;
  }

  // If current revision is active -- create new revision and set it inactive.
  if ($entity->isDefaultRevision()) {
    $entity->setNewRevision();
    $entity->isDefaultRevision(FALSE);
  }
}

/**
 * Implements hook_form_alter().
 */
function ymca_workflow_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id != 'node_article_edit_form') {
    return;
  }
  if (isset($form['actions']['publish'])) {
    $form['actions']['publish']['#access'] = FALSE;
    unset($form['actions']['publish']['#dropbutton']);
  }
  if (isset($form['actions']['unpublish'])) {
    $form['actions']['unpublish']['#access'] = FALSE;
    unset($form['actions']['publish']['#dropbutton']);
  }

  $form['actions']['submit']['#access'] = TRUE;
}

/**
 * Implements hook_workflow_permitted_state_transitions_alter().
 */
function ymca_workflow_workflow_permitted_state_transitions_alter(&$transitions, $context) {
  // Do not allow to keep published status. Every time any change is done
  // it should go through Draft / Needs review statuses.
  $current_state = $context['state']->id;
  if ($current_state == 'workflow_published') {
    unset($transitions['workflow_published_published']);
  }
}
