<?php

/**
 * @file
 * Contains ymca_blocks.module.
 */

/**
 * Implements hook_theme().
 */
function ymca_blocks_theme($existing, $type, $theme, $path) {
  return [
    'expander_block' => [
      'variables' => [
        'header' => NULL,
        'content' => NULL,
        'entity' => NULL,
      ],
      'template' => 'expander-block',
    ],
    'promo_block' => [
      'variables' => [
        'header' => NULL,
        'image' => NULL,
        'content' => NULL,
        'link' => NULL,
        'link_text' => NULL,
      ],
      'template' => 'promo-block',
    ],
    'sidebar_navigation_block' => [
      'variables' => [
        'content' => NULL,
        'attributes' => NULL,
      ],
      'template' => 'sidebar-navigation-block',
    ],
    'alert_block' => [
      'variables' => [
        'title' => t('Special Alert'),
        'message' => NULL,
        'inner_attributes' => NULL,
      ],
      'template' => 'alert-block',
    ],
  ];
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function ymca_blocks_block_content_view_alter(array &$build, Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display) {
  switch ($entity->bundle()) {
    case 'date_block':
      \Drupal::service('dateslides.service')->viewAlter($build, $entity);
      break;

    case 'expander_block':
      $content = $entity->field_block_content->get(0);
      if (!$content) {
        \Drupal::logger('ymca_blocks')->notice(t('Content(expander block) is not found for entity: @id', ['@id' => $entity->id()]));
        break;
      }
      $build['expander'] = array(
        '#theme' => 'expander_block',
        '#header' => $entity->field_block_header->value,
        '#content' => array(
          '#type' => 'processed_text',
          '#text' => $content->value,
          '#format' => $content->format,
          '#langcode' => $content->getLangcode(),
        ),
        '#entity' => $entity,
      );

      // TODO: Not required now, should live in theme.
      // $build['#attached']['library'][] = 'ymca_blocks/expander-block';.
      break;

    case 'promo_block':
      // Get path for promo block.
      $url = $entity->field_link->get(0)->getUrl();
      if ($url->isRouted()) {
        $route = $url->getRouteName();
        $params = $url->getRouteParameters();
        $path = \Drupal::urlGenerator()->generateFromRoute($route, $params);
      }
      else {
        $path = $url->getUri();
        $path = preg_replace('/^base:/', '', $path);
      }

      $build['promo'] = array(
        '#theme' => 'promo_block',
        '#header' => \Drupal\Component\Utility\Html::escape($entity->field_block_header->value),
        '#content' => $build['field_block_content'],
        '#image' => $build['field_image'],
        '#link' => $path,
        '#link_text' => $entity->field_link->title,
      );

      hide($build['field_block_header']);
      hide($build['field_block_content']);
      hide($build['field_image']);
      hide($build['field_link']);
      break;

    case 'alert_block':
      // Get message.
      $field = $entity->field_block_content->get(0);
      $value = $field->get('value')->getString();
      $format = $field->get('format')->getString();
      $text = check_markup($value, $format);

      $attributes = new \Drupal\Core\Template\Attribute();
      $attributes->addClass('richtext');
      $attributes->setAttribute('id', 'alert-block-' . $entity->id());
      $build['alert'] = array(
        '#theme' => 'alert_block',
        '#message' => $text,
        '#inner_attributes' => $attributes,
      );

      if ($entity->hasField('field_global_alert')) {
        $is_global = $entity->get('field_global_alert');
        $global_val = $is_global->getValue()[0]['value'];
        if ($global_val == 1) {
          $build['alert']['#title'] = t('Global Alert');
        }
      }

      hide($build['field_block_content']);
      break;
  }
}
